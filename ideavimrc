set surround
set argtextobj
set ideajoin
let g:argtextobj_pairs="(:),{:},[:],<:>"

set clipboard=unnamedplus,unnamed,ideaput
let mapleader = ","
:nmap <space> ,
set ignorecase smartcase
set hlsearch
set incsearch
set showmode
set undolevels=100
set history=1000
" set mps+=<:>
set nonumber
set norelativenumber

" For Which Key
set notimeout

inoremap jj <ESC>
inoremap jk <ESC>

nmap <C-o> <Action>(Back)
nmap <C-i> <Action>(Forward)
nnoremap <C-j> gt
nnoremap <C-k> gT

nnoremap tj  gt
nnoremap tk  gT

" Toggle Presentation Mode
nmap <leader>P <Action>(TogglePresentationMode)
nmap <leader>p <Action>(PinActiveEditorTab)

" Open a new vertical split and switch to it. Use <C-w>s to get a horizontal split
nnoremap <leader>wv <C-w>v<C-w>l
nmap <leader>wh <Action>(ActivateHierarchyToolWindow)

" Quick navigation of windows
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

nmap <leader>mb <Action>(Build)
nmap <leader>mr <Action>(Run)
nmap <leader>\\ <Action>(FindUsages)
nmap <leader>/ <Action>(ShowUsages)

nmap <leader>q <Action>(FindInPath)
vmap <leader>q <Action>(FindInPath)<Action>(EditorEscape)
vmap <leader>S <Action>(SurroundWith)

nmap <leader>a <Action>(GotoAction)
vnoremap <leader>a <esc>gvhh:<C-U>action GotoAction<cr>

"nmap <C-H> <Action>(GotoRelated)
"inoremap <C-H> <C-O>:action GotoRelated<cr>
"vmap <C-H> <Action>(GotoRelated)


nmap <leader>g <Action>(GotoSymbol)
vnoremap <leader>g <esc>gvhh:<C-U>action GotoSymbol<cr>

nmap <leader>. <Action>(GotoClass)
vnoremap <leader>. <esc>gvhh:<C-U>action GotoClass<cr>

nmap <leader>] <Action>(GotoImplementation)
nmap <leader>[ <Action>(GotoSuperMethod)
nmap <leader>i <Action>(QuickImplementations)

nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [[ <Action>(PreviousOccurence)
nmap ]] <Action>(NextOccurence)
nmap <leader>hp <Action>(VcsShowCurrentChangeMarker)
nmap <leader>hu <Action>(Vcs.RollbackChangedLines)
nmap <leader>va <Action>(Annotate)
nmap gh <Action>(Vcs.ShowTabbedFileHistory)
nmap <leader>lh <Action>(LocalHistory.ShowLocalHistory)
vmap gh <esc>gvhh<Action>(Vcs.ShowHistoryForBlock)
"vmap gh <esc>gvhh<Action>(LocalHistory.ShowSelectionHistory)
map gl <Action>(JumpToLastChange)
map g; <Action>(JumpToLastChange)
map g, <Action>(JumpToNextChange)

map <C-W>L <Action>(MoveEditorToOppositeTabGroup)
map <C-W>H <Action>(MoveEditorToOppositeTabGroup)
" nmap <leader>gt <Action>(GotoTest)
nmap <leader>* <Action>(HighlightUsagesInFile)
vnoremap <leader>* <esc>gvhh:<C-U>action HighlightUsagesInFile<cr>
nmap <leader>R <Action>(RunClass)
nmap <leader>r <Action>(Refactorings.QuickListPopupAction)
vnoremap <leader>r <esc>gvhh:<C-U>action refactorings.QuickListPopupAction<cr>
nmap <leader>n <Action>(RenameElement)
vnoremap <leader>em <esc>gvhh:<C-U>:action ExtractMethod<cr>
nmap <leader>em <Action>(ExtractMethod)<esc>
nmap <leader>eg <Action>(Generate)<esc>
map <leader>ec <Action>(IntroduceConstant)<esc>
map <leader>ev <Action>(IntroduceVariable)<esc>
nmap <leader>t <Action>(GotoFile)
vnoremap <leader>t <esc>gvhh:<C-U>action GotoFile<cr>
"nmap <leader>x <Action>(FileChooser.GotoHome)
nmap gQ <Action>(ReformatCode)
vmap gQ <Action>(ReformatCode)
map Z <Action>(AceAction)
map s <Action>(AceAction)
map S <Action>(AceAction)
" map zZ <Action>(AceTargetAction)
map <leader>l <Action>(AceLineAction)
nmap gcc <Action>(CommentByLineComment)
vnoremap gcc <esc>gvhh:<C-U>action CommentByLineComment<cr>

" unimpaired mappings
map cow <Action>(EditorToggleUseSoftWraps)
map col <Action>(EditorToggleShowWhiteleaders)

map <leader>; <Action>(VimWindowRight)
map <leader>j <Action>(VimWindowDown)
map <leader>k <Action>(VimWindowUp)
map <leader>h <Action>(VimWindowLeft)
"noremap <esc> <esc>:<C-U>noh<CR>:action Escape<cr>:action HideSideWindows<cr>

map <leader>c <Action>(ActivateMessagesToolWindow)
map <leader>s <Action>(ActivateFindToolWindow)
map <leader>f <Action>(ActivateFavoritesToolWindow)
nmap <leader>y <Action>(ShowErrorDescription)
nmap <C-P> <Action>(ParameterInfo)
inoremap <C-P> <C-O>:action ParameterInfo<cr>

map <leader>x <Action>(SelectInProjectView)
" map <leader>x <Action>(ActivateProjectToolWindow)
"
map <leader>z <Action>(CloseContent)
map <leader>b <Action>(RecentFiles)
map <F8> <Action>(FileStructurePopup)
map <leader>s <Action>(FileStructurePopup)
imap <C-N> <Action>(HippieCompletion)
imap <Tab> <Action>(CodeCompletion)
imap <C-I> <Action>(SmartTypeCompletion)
imap <C-X> <Action>(EditorCompleteStatement)

map <leader>0 <Action>(ActivateMessagesToolWindow)
map <leader>2 <Action>(Go To Tab #2)
map <leader>3 <Action>(ActivateFindToolWindow)

map <leader>' <Action>(ToggleBookmark)
map <leader>" <Action>(ToggleBookmarkWithMnemonic)
map <leader>` <Action>(ShowBookmarks)
map <leader>= <Action>(RunConfiguration)
map <leader>- <Action>(ChooseRunConfiguration)

nnoremap <leader>vs :source ~/.ideavimrc<CR>
noremap <leader>vi :<C-U>action Tool_External<space>Tools_Vim<CR>

map <leader>* <Action>(MultiHighlight)
map <leader># <Action>(MultiHighlight.ClearAction)

